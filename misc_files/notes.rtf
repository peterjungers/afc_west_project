{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;}
\margl1440\margr1440\vieww15360\viewh11400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs32 \cf2 \cb3 Web scraping and database population tests: \'93website_projects/tests/web_scraping/\'94\
	Web scraping process: \'93scrape_test.py\'94\
	Populating database from csv file: \'93populate.py\'94\
	Populating database via SQLALchemy: \'93sqlalchemy_data_populate.py\'94\
\
Awesome tutorial on constructing tables with Jinja2:\
	https://www.youtube.com/watch?v=mCy52I4exTU\
\
SQLALchemy, match multiple string values:\

\f1 	count = (
\f2\i model
\f1\i0 .query\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2          .filter_by(team_id=
\f2\i team_id
\f1\i0 )\
         .filter(or_(
\f2\i model_column
\f1\i0 .like(
\f2\i value_1
\f1\i0 ),\
                     
\f2\i model_column
\f1\i0 .like(
\f2\i value_2
\f1\i0 )\
                     )).count()\
         )
\f0 \
}